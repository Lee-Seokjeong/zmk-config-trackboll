// vim: set expandtab:ts=4:sw=4
/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/ext_power.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/mouse.h>
#include <dt-bindings/zmk/rgb.h>
#include <dt-bindings/led/led.h>

&pinctrl {
    spi3_default: spi3_default {
        group1 {
            psels = <NRF_PSEL(SPIM_MOSI, 0, 6)>;
        };
    };

    spi3_sleep: spi3_sleep {
        group1 {
            psels = <NRF_PSEL(SPIM_MOSI, 0, 6)>;
            low-power-enable;
        };
    };
};

&spi3 {
  compatible = "nordic,nrf-spim";
  status = "okay";

  pinctrl-0 = <&spi3_default>;
  pinctrl-1 = <&spi3_sleep>;
  pinctrl-names = "default", "sleep";

  led_strip: ws2812@0 {
    compatible = "worldsemi,ws2812-spi";

    /* SPI */
    reg = <0>; /* ignored, but necessary for SPI bindings */
    spi-max-frequency = <4000000>;

    /* WS2812 */
    chain-length = <10>; /* number of LEDs */
    spi-one-frame = <0x70>;
    spi-zero-frame = <0x40>;
    color-mapping = <LED_COLOR_ID_GREEN
                          LED_COLOR_ID_RED
                          LED_COLOR_ID_BLUE>;
  };
};

/ {
    chosen {
        zmk,underglow = &led_strip;
    };
};

// TODO: try to move these to a zmk-config corne.dtsi so that I can use these in layer definition for PIM447

#define DEFAULT 0
#define GAME 1
#define NAV 2
#define SYMB 3

/ {
    macros {
        main_password: main_password {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp N1 &kp N2 &kp N3 &kp N4 &kp N5 &kp N6>;
            label = "MAIN_PASSWORD";
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&kp CAPSLOCK  &kp Q  &kp W  &kp E     &kp R  &kp T        &kp Y    &kp U  &kp I      &kp O    &kp P     &kp BSPC
&kp LSHFT     &kp A  &kp S  &kp D     &kp F  &kp G        &kp H    &kp J  &kp K      &kp L    &kp SEMI  &kp SQT
&kp LCTRL     &kp Z  &kp X  &kp C     &kp V  &kp B        &kp N    &kp M  &kp COMMA  &kp DOT  &kp FSLH  &kp ESC
                            &kp LGUI  &mo 1  &kp SPACE    &kp RET  &mo 2  &kp RALT
            >;
        };

        lower_layer {
            bindings = <
&kp TAB    &kp F1   &kp F2   &kp F3     &kp F4     &kp F5                 &kp NUMBER_7  &kp NUMBER_8  &kp NUMBER_9  &kp SLASH     &kp ASTERISK  &kp BSPC
&kp LSHFT  &kp F6   &kp F7   &kp F8     &kp F9     &kp F10                &kp NUMBER_4  &kp N5        &kp NUMBER_6  &kp NUMBER_9  &kp MINUS     &kp PLUS
&kp LCTRL  &kp F11  &kp F12  &mkp RCLK  &mkp LCLK  &pim447_scroll_move    &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &kp DOT       &kp EQUAL     &kp ENTER
                             &kp LGUI   &trans     &kp SPACE              &kp NUMBER_0  &trans        &kp RCTRL
            >;
        };

        raise_layer {
            bindings = <
&kp K_PP           &kp UP      &kp C_STOP       &kp PRINTSCREEN  &kp SCROLLLOCK  &kp PAUSE_BREAK    &bt BT_CLR        &bt BT_SEL 0       &bt BT_SEL 1       &bt BT_SEL 2     &bt BT_SEL 3                      &bt BT_SEL 4
&kp LEFT           &kp DOWN    &kp RIGHT        &kp INS          &kp HOME        &kp PG_UP          &ext_power EP_ON  &ext_power EP_OFF  &ext_power EP_TOG  &rgb_ug RGB_HUI  &rgb_ug RGB_COLOR_HSB(66,91,51)   &rgb_ug RGB_COLOR_HSB(99,91,50)
&kp C_VOLUME_DOWN  &kp K_MUTE  &kp C_VOLUME_UP  &kp DEL          &kp END         &kp PG_DN          &rgb_ug RGB_TOG   &rgb_ug RGB_EFF    &rgb_ug RGB_SPI    &rgb_ug RGB_SPD  &rgb_ug RGB_COLOR_HSB(240,88,49)  &rgb_ug RGB_COLOR_HSB(0,87,50)
                                                &kp C_PREVIOUS   &trans          &kp C_NEXT         &kp RET           &trans             &kp RALT
            >;
        };

        layer_3 {
            bindings = <
&bt BT_CLR  &bt BT_SEL 0    &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4    &trans            &trans             &trans                          &trans  &trans  &trans
&caps_word  &main_password  &trans        &trans        &trans        &trans          &ext_power EP_ON  &ext_power EP_OFF  &trans                          &trans  &trans  &trans
&trans      &trans          &trans        &trans        &trans        &trans          &rgb_ug RGB_TOG   &rgb_ug RGB_EFF    &rgb_ug RGB_COLOR_HSB(0,94,51)  &trans  &trans  &trans
                                          &trans        &trans        &trans          &trans            &trans             &trans
            >;
        };
    };

    conditional_layers {
        compatible = "zmk,conditional-layers";

        controling {
            if-layers = <2 1>;
            then-layer = <3>;
        };
    };
};
